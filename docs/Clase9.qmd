---
title: "Clase 8: Supervivencia de nido"
author: "David Murillo"
format:
  html:
    css: styles.css
---




::: panel-tabset

## Inferencia Bayesiana

Referencia: [Integrated Population Models](https://shop.elsevier.com/books/integrated-population-models/schaub/978-0-12-820564-8) - Sección 2.4

La inferencia bayesiana es un enfoque estadístico que permite actualizar el conocimiento sobre parámetros desconocidos mediante el uso del Teorema de Bayes. Este marco es fundamental en modelos de población integrados, ya que permite combinar datos de diferentes fuentes con incertidumbre.

**1. Teorema de Bayes**

El Teorema de Bayes es la base de la inferencia bayesiana y se expresa como:

$$p(\theta | y) = \frac{p(y | \theta) \cdot p(\theta)}{p(y)} = \frac{p(\theta,y)}{p(y)}$$
Donde:

$p(\theta|y)$ es el objetivo de la inferencia bayesiana. Se llama distribución posterior y es la probabilidad del parámetro dado la información de los datos.

La segunda cantidad es la probabilidad de los datos dado el parámetro, $p(y|\theta)$. Esta es la verosimilitud (aunque en la regla de Bayes se escribe como $p(y|\theta)$ en lugar de $L(\theta|y)$).

La tercera cantidad es la probabilidad del parámetro, $p(\theta)$, la cual se llama distribución a priori o simplemente "prior".

Finalmente, la última cantidad es la probabilidad de los datos, $p(y)$. Es una constante que asegura que la regla de Bayes se integre a 1, como es requisito para una función de probabilidad. El denominador $p(y)$ es la integral del numerador sobre el parámetro $\theta$: $\int p(y|\theta)p(\theta)d(\theta)$


**2. Componentes de la Inferencia Bayesiana**

a) Distribución a priori (prior)

Especifica el conocimiento previo sobre los parámetros antes de observar los datos. Puede ser:

Informativa: Basada en estudios previos o conocimiento experto.

No informativa o vaga: Utilizada cuando hay poco conocimiento previo, permitiendo que los datos dominen la inferencia.

b) Verosimilitud (likelihood)
Define cómo los datos observados se relacionan con los parámetros del modelo. En ecología, esto podría ser un modelo de conteo, como una distribución de Poisson o binomial negativa.

c) Distribución posterior (posterior)

La distribución posterior es el producto de la verosimilitud y el prior. Representa el conocimiento actualizado sobre los parámetros después de observar los datos.

**3. Ventajas del Enfoque Bayesiano en Modelos Ecológicos**

- Incorporación de incertidumbre: Los modelos bayesianos manejan la incertidumbre de manera explícita, tanto en los datos como en los parámetros.

- Flexibilidad: Permiten modelar estructuras complejas, como efectos aleatorios, jerárquicos o modelos integrados.

- Distribuciones completas: Se obtienen distribuciones completas de los parámetros, no solo estimaciones puntuales, lo que facilita la interpretación de la incertidumbre.

- Actualización del conocimiento: A medida que se obtienen nuevos datos, se puede actualizar la posterior y obtener una nueva inferencia.

**4. Cálculo de la Distribución Posterior: Métodos Numéricos**

En la práctica, la distribución posterior no suele tener una forma analítica simple, por lo que se utilizan métodos numéricos como:

Método de Monte Carlo mediante cadenas de Markov (MCMC)

El MCMC es una técnica que genera muestras de la distribución posterior y permite calcular estimaciones de los parámetros. Los pasos básicos son:

- Inicialización: Se elige un valor inicial para los parámetros.

- Generación de muestras: Se generan nuevas muestras en función de una distribución de propuesta.

- Aceptación/rechazo: Las muestras se aceptan o rechazan según un criterio de probabilidad.

- Convergencia: Una vez que la cadena converge, las muestras se consideran representativas de la distribución posterior.

Herramientas como JAGS y Stan se utilizan para implementar MCMC en R.

**5. Diagnóstico y Evaluación de Modelos Bayesianos**

Es fundamental evaluar si el MCMC ha convergido y si las muestras son representativas. Algunos métodos comunes son:

Gráficos de trazado (trace plots): Muestran cómo evolucionan las muestras y ayudan a detectar problemas de convergencia.

Estadísticos de diagnóstico: Como el factor de reducción de Gelman-Rubin ($\hat{R}$) y la autocorrelación.

**6. Aplicación en Modelos Integrados de Población (IPMs)**

En el contexto de los IPMs, la inferencia bayesiana permite combinar diferentes fuentes de datos (conteos, captura-recaptura, productividad) en un único marco analítico, manejando la incertidumbre en cada componente.

Ejemplo básico:

- Datos de conteo $N$: Distribución de Poisson.

- Datos de captura-recaptura: Modelo CJS.

- Priors informativos sobre tasas de supervivencia y fecundidad.

La posterior conjunta integra todos estos elementos, proporcionando estimaciones de los parámetros clave.




## Supervivencia de nidos

Referencia: [Integrated Population Models](https://shop.elsevier.com/books/integrated-population-models/schaub/978-0-12-820564-8) - Sección 4.4.6

Para esta clase necesitaremos instalar el software [Jags](https://sourceforge.net/projects/mcmc-jags/)

El objetivo principal de los modelos de supervivencia de nidos es la estimación del éxito de los nidos, que es la probabilidad de que al menos un polluelo sea producido por un nido iniciado. El fracaso del nido puede deberse a la depredación del nido o de uno o ambos padres, competencia por otro individuo de la misma especie o inanición de los polluelos si no reciben suficiente alimento. El éxito del nido está compuesto por los éxitos durante las fases de incubación y de cría, y los procesos que gobiernan estos éxitos pueden ser diferentes. Por lo tanto, los dos componentes del éxito general del nido suelen modelarse por separado. 

Los datos sobre la supervivencia de nidos se recogen de nidos activos que deben ser visitados repetidamente. Los intervalos de tiempo entre visitas no tienen que ser idénticos y pueden ser mayores a 1 día. El estado del nido se codifica como "vivo" o "muerto" y se registra en cada visita. Un nido vivo significa que contiene al menos un huevo o un polluelo vivo y que no ha sido abandonado.

El éxito del nido se expresa como la proporción de nidos exitosos en nuestra muestra, que a menudo estará sesgada positivamente porque los nidos que fracasaron en una etapa temprana son menos propensos a aparecer en nuestra muestra (es decir, a ser detectados en absoluto) que los nidos que fracasaron más tarde o que tuvieron éxito. Por lo tanto, es difícil obtener una muestra de nidos que sea aleatoria con respecto al destino. Este problema ha sido reconocido desde hace mucho tiempo y Harold Mayfield fue el primero en formalizar una solución mediante el desarrollo de modelos que pueden proporcionar estimaciones no sesgadas del éxito de los nidos (Mayfield, 1961, 1975). La idea clave es que la supervivencia diaria se estima desde el momento en que un nido es detectado y entra en la muestra estudiada, y luego el éxito del nido se deriva como el producto de las probabilidades diarias de supervivencia del nido durante todo el período, que puede ser solo de incubación o también incluir el período de cría. Los modelos originales asumían probabilidades constantes de supervivencia diaria del nido y que el fracaso del nido ocurría en el punto medio entre la fecha en que el nido fue registrado por última vez como vivo y la fecha en que se detectó por primera vez el fracaso. Más tarde, los modelos se mejoraron para relajar estas suposiciones y permitir que la supervivencia diaria dependa de la edad del nido y de covariables temporales (Johnson, 1979; Hensler y Nichols, 1981; Acbischer, 1999; Dinsmore et al., 2002; Rotella et al., 2004). Además, la inclusión de efectos aleatorios de nidos permite acomodar la no independencia de la supervivencia de los nidos debido a efectos individuales o del sitio (He, 2003; Cao et al., 2008, 2009; Royle y Dorazio, 2008; Schmidt et al., 2010; Converse et al., 2013).

Los datos recopilados para un estudio sobre la supervivencia de nidos incluyen la fecha de la visita a un nido $i$, la información sobre el estado de ese nido durante la visita y posiblemente también la edad de los polluelos (al menos durante la visita cuando se encuentra el nido). Así, los datos para cada nido $i$ generalmente se resumen como la fecha en que se detectó el nido por primera vez ($f_i$), el último día en que el nido $i$ fue encontrado vivo $j_i$, el día en que el nido fue visitado por última vez $k_i$ y si el nido $i$ estaba vivo durante esta última visita (escrito como  $x_i = 0$ para nidos fallidos y $x_i = 1$ para nidos exitosos). La forma más flexible y directa de analizar estos datos es simplemente adoptando un modelo de CJS donde descartamos el submodelo para la probabilidad de recaptura. Este enfoque fue propuesto por Royle y Dorazio (2008) y Schmidt et al. (2010), y se ilustra en esta clase.

Hay tres desafíos en el análisis de estos datos. Primero, no todos los nidos se detectan el día 1, es decir, en la fecha de puesta del primer huevo. Por lo tanto, la estimación de la supervivencia diaria comienza en el día en que se descubre un nido, y así el modelo condiciona la primera detección. También podemos decir que nuestros datos están censurados a la izquierda porque el evento modelado (fracaso) pudo haber ocurrido antes de que el "sujeto" (en este caso, un nido) ingrese al estudio (Landes et al., 2020). En segundo lugar, a menos que los nidos se visiten diariamente, la fecha exacta del fracaso es desconocida, es decir, las fechas de fracaso observadas son típicamente censuradas por intervalos. Sin embargo, la fecha del fracaso puede estimarse desde el modelo basado en las probabilidades de supervivencia diaria sin necesidad de asumir cuándo ocurrió, como se suponía en los modelos originales de supervivencia de nidos (Johnson, 1979). Finalmente, el destino final puede no ser conocido para todos los nidos, lo que ocurre cuando un nido registrado como vivo en la última visita no se vuelve a visitar hasta la fecha de la salida de los polluelos. En este caso, los datos están censurados a la derecha, es decir, solo sabemos que el nido ha sobrevivido hasta la última fecha en que fue observado vivo. Podemos eliminar la incertidumbre resultante al no modelar el destino del nido después de la última visita.

El éxito general del nido se calcula como el producto de las probabilidades diarias de supervivencia del nido durante el número de días requeridos hasta que los polluelos abandonen el nido. Para dar un ejemplo simple: con una probabilidad constante de supervivencia diaria del nido (es decir, sin efectos del tiempo y la edad del nido), el éxito total del nido se estima como $s^T$ para una especie que requiere $T$ días desde la puesta del huevo hasta el abandono del nido.


## cargar paquetes


```{r}

library(jagsUI)
library(tidyverse)
```

## Cargar base de datos

```{r}
NidosPatos <- read.csv("data/duck_nests.csv", 
                   header=TRUE)
```

La base de datos duck_NidoPatos1s.csv contiene una muestra aleatoria de registro para tres años, divididos en 12 bloques. 

Primero estandarizaremos la visita inicial a cada nido

```{r}
NidoPatos1 <- NidosPatos %>% 
  mutate(init_stadard = (init- mean(init))/sd(init))
```

## Preparar datos para el modelo

Crearemos una lista con las covariables que pueden implementarce en el modelo

```{r}

dsr.data <- list(n.nests = dim(NidoPatos1)[1], 
                 n.yrs = max(NidoPatos1$year), 
                 n.areas = max(NidoPatos1$block), 
                 n.spp = max(NidoPatos1$species),
                 year = NidoPatos1$year, 
                 area = NidoPatos1$block, 
                 spp = NidoPatos1$species,
                 expos = NidoPatos1$expos, 
                 init = NidoPatos1$init_stadard,
                 age = NidoPatos1$age_start, 
                 survive = NidoPatos1$survive,
                 dist = NidoPatos1$dist)
```

## Modelo Nulo

```{r}
sink("dsr_null.jags")
cat("
model {
  # modeling daily nest survival on the logit scale
  dsr.mu ~ dnorm(0, 0.33) # intercept, vague prior (0,1) on real scale

  for (i in 1:n.nests) {
    for (j in 1:expos[i]) {
      # daily survival is a constant mean survival (no covariates or random effects)
      logitS[i,j] <- dsr.mu
      logit(S[i,j]) <- logitS[i,j] # convert back to real scale
    }
    IS[i] <- prod(S[i,1:expos[i]]) # prob of surviving entire exposure interval
    survive[i] ~ dbern(IS[i]) # does nest survive this nest check interval?
  }
}
", fill = TRUE)
sink()
```


```{r, eval=FALSE}

parms <- c("dsr.mu")

na <- 1000
ni <- 1100
nt <- 1        
nb <- 100
nc <- 3

nest.success_nulo <- jagsUI(dsr.data, inits = NULL, parms, "dsr_null.jags", 
                   n.adapt = na, n.chains = nc, n.thin = nt, 
                   n.iter = ni, n.burnin = nb)

print(nest.success_nulo, digits = 4)
```

##  Modelo year como predictor

```{r}
sink("dsr_year.jags")
cat("
model {
  # modeling daily nest survival on the logit scale
  dsr.mu ~ dnorm(0, 0.33) # intercept, vague prior (0,1) on real scale
  b.year ~ dnorm(0, 1) # fixed effect for year (vague prior)

  for (i in 1:n.nests) {
    for (j in 1:expos[i]) {
      # daily survival is a function of mean survival and year effect
      logitS[i,j] <- dsr.mu + b.year * year[i] # adding year effect to the logit model
      logit(S[i,j]) <- logitS[i,j] # convert back to real scale
    }
    IS[i] <- prod(S[i,1:expos[i]]) # prob of surviving entire exposure interval
    survive[i] ~ dbern(IS[i]) # does nest survive this nest check interval?
  }
}
", fill = TRUE)
sink()
```

```{r}
parms <- c("dsr.mu", "b.year")
```


```{r, eval=FALSE}
na <- 1000
ni <- 1100
nt <- 1        
nb <- 100
nc <- 3

nest.success_year <- jagsUI(dsr.data, inits = NULL, parms, "dsr_year.jags", 
                   n.adapt = na, n.chains = nc, n.thin = nt, 
                   n.iter = ni, n.burnin = nb, parallel = TRUE)
```


```{r, eval=FALSE}
year = 1:3

dsr <- plogis(nest.success_year$mean$dsr.mu + nest.success_year$mean$b.year * year)

dsr_IC2.5 <- plogis(nest.success_year$q2.5$dsr.mu + nest.success_year$mean$b.year * year)

dsr_IC97.5 <- plogis(nest.success_year$q97.5$dsr.mu + nest.success_year$mean$b.year * year)


df_pre_year <- data.frame(dsr = dsr,
                         IC95L = dsr_IC2.5,
                         IC95H = dsr_IC97.5,
                         year = year)


ggplot(df_pre_year, aes(x= year, y =dsr)) +
  geom_errorbar(aes(ymin= IC95L,
                  ymax= IC95H),
                width = 0.4,
              alpha= 0.4,
              fill= "lightgreen")+
  geom_point()+
  ylim(c(0.9, 1)) +
  theme_classic()
```


##  Modelo year + age como predictor

```{r}
sink("dsr_year_age.jags")
cat("
model {
  # modeling daily nest survival on the logit scale
  dsr.mu ~ dnorm(0, 0.33) # intercept, vague prior (0,1) on real scale
  b.year ~ dnorm(0, 1) # fixed effect for year (vague prior)
  b.age ~ dnorm(0, 1) # fixed effect for age (vague prior)

  for (i in 1:n.nests) {
    for (j in 1:expos[i]) {
      # daily survival is a function of mean survival, year effect, and age effect
      logitS[i,j] <- dsr.mu + b.year * year[i] + b.age * age[i] # adding both year and age effects
      logit(S[i,j]) <- logitS[i,j] # convert back to real scale
    }
    IS[i] <- prod(S[i,1:expos[i]]) # prob of surviving entire exposure interval
    survive[i] ~ dbern(IS[i]) # does nest survive this nest check interval?
  }
}
", fill = TRUE)
sink()
```


```{r, eval=FALSE}
parms <- c("dsr.mu", "b.year", "b.age")

 MCMC settings
na <- 1000; ni <- 1100; nt <- 1        
nb <- 100; nc <- 3

nest.success_year_age <- jagsUI(dsr.data, inits = NULL, parms, "dsr_year_age.jags", 
                   n.adapt = na, n.chains = nc, n.thin = nt, 
                   n.iter = ni, n.burnin = nb, parallel = TRUE)
```


```{r, eval=FALSE}
age <- 1:35

dsr <- plogis(nest.success_year_age$mean$dsr.mu + nest.success_year_age$mean$b.age*age)

dsr_IC2.5 <- plogis(nest.success_year_age$q2.5$dsr.mu + nest.success_year_age$q2.5$b.age*age)

dsr_IC97.5 <- plogis(nest.success_year_age$q97.5$dsr.mu + nest.success_year_age$q97.5$b.age*age)


Age_df_pre <- data.frame(age = age,
                         dsr =dsr,
                         IC95L = dsr_IC2.5,
                         IC95H = dsr_IC97.5)


ggplot(Age_df_pre, aes(x= age, y =dsr)) +
  geom_ribbon(aes(ymin= IC95L,
                  ymax= IC95H),
              alpha= 0.4,
              fill= "lightgreen")+
  geom_line()+
  theme_classic()
```


## Crear funcion del modelo mixto

```{r}
{sink("dsr.jags"); cat("
model {
# modeling daily nest survival on the logit scale
dsr.mu ~ dnorm(0, 0.33) # intercept, note this is vague (0,1) on real scale

# fixed effects for nest level covariates (all are linear on logit scale)
b.age ~ dnorm(0, 1) # nest age effect
b.dist ~ dnorm(0, 1) # distance from management edge
b.init ~ dnorm(0, 1) # nest initiation date effect

# note: I'm modeling site and year as crossed random effects - they could also be nested
# random site effects
dsr.area.sd ~ dunif(0.01, 1) # random site effect
dsr.area.tau <- pow(dsr.area.sd, -2)
for (j in 1:n.areas){
  eps.area[j] ~ dnorm(0, dsr.area.tau)
}

# random year effects
dsr.yr.sd ~ dunif(0.01, 1) # random year effect
dsr.yr.tau <- pow(dsr.yr.sd, -2)
for (i in 1:n.yrs){
  eps.yr[i] ~ dnorm(0, dsr.yr.tau)
}

# random species effects
dsr.spp.sd ~ dunif(0.01, 1) # random species effect
dsr.spp.tau <- pow(dsr.spp.sd, -2)
for (i in 1:n.spp){
  eps.spp[i] ~ dnorm(0, dsr.spp.tau)
}

for (i in 1:n.nests){
  for (j in 1:expos[i]){
      # daily survival is function of mean dsr, nest age effect, distance from edge,
      # initiation date, and random effects for area, year, and species
      logitS[i,j] <- dsr.mu + b.age*(age[i]+j-1) + b.dist*dist[i] + b.init*init[i] + 
        eps.area[area[i]] + eps.yr[year[i]] + eps.spp[spp[i]]
      logit(S[i,j]) <- logitS[i,j] # convert back to real scale
      } 
    IS[i] <- prod(S[i,1:expos[i]]) # prob of surviving entire exposure interval
    survive[i] ~ dbern(IS[i]) # does nest survive this nest check interval?
    }
  } # end jags model
",fill = TRUE); sink()}
```

```{r}
parms <- c("dsr.mu", "b.age", "b.dist", "b.init", 
           "dsr.area.sd", "dsr.yr.sd", "dsr.spp.sd",
           "eps.area", "eps.yr", "eps.spp")
```


```{r, eval=FALSE}
na <- 1000; ni <- 1100; nt <- 1        
nb <- 100; nc <- 3

nest.success <- jagsUI(dsr.data, inits = NULL, parms, "dsr.jags", 
                   n.adapt = na, n.chains = nc, n.thin = nt, 
                   n.iter = ni, n.burnin = nb, parallel = TRUE)
```


:::

![HN Biology Investigation Academy](HN Cursos publicidad/HN Biology Inv large.jpg)















