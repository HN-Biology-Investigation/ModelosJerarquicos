---
title: "Clase 6: El modelo Royal-Nichols y otros modelos N-Mixture no estándar"
author: "David Murillo"
format:
  html:
    css: styles.css
---

Los modelos *N-Mixture* son métodos de inferencia sobre la abundancia que se ajustan explícitamente a algún tipo de error de medición. Por lo general, adoptan una distribución de Poisson o similar para la variación espacial, temporal o espaciotemporal en los estados de abundancia latente *N*. Sin embargo, dependiendo del protocolo aplicado para medir la abundancia, el modelo de observación puede variar bastante. En la mayor parte de este curso, cubrimos el molesto error de detección de falsos negativos que conduce a una interpretación binomial condicional del proceso de observación. Aquí cubriremos dos diseños de variantes de modelos *N-Mixture*. En la primera, en lugar de observar conteos, solo tenemos información sobre si el conteo fue cero o mayor que cero, es decir, detección- no detección (presencia/ausencia), lo que conduce a un Benoulli/Poison mixture model. En la segunda variante, podemos observar un miembro de *N* varias veces, lo que representa efectivamente un tipo de error falso positivo además de los falsos negativos habituales. Esto conduce a la adopción de un Poisson/Poisson mixture model.



::: panel-tabset

## El modelo *N-Mixture* de Royal-Nichols o Bernoulli/Poisson

Cuando se cumplen los supuestos paramétricos adecuados, podemos estimar la abundancia a partir de datos de detección/no detección ("presencia/ausencia"). El modelo de Royle-Nichols (o modelo RN para abreviar) es otro ejemplo de ello ([Royle y Nichols, 2003]( https://doi.org/10.1890/0012-9658(2003)084[0777:EAFRPA]2.0.CO;2)). El modelo básico de *N-Mixture* es una mezcla binomial/Poisson para los conteos observados, mientras que el modelo RN es una mezcla Bernoulli/Poisson para los datos de detección/no detección observados. Es un modelo de mezcla N importante en el árbol genealógico de modelos de este curso, porque proporciona un vínculo conceptual entre los modelos jerárquicos N-Mixture para la abundancia y el modelo N-Mixture para la ocurrencia (es decir, el modelo de abundancia clásico. El modelo RN puede ser útil para estimar la abundancia a partir de mediciones replicadas de presencia/ausencia, para acomodar la heterogeneidad de detección cuando se enfoca en la ocupación o para vincular los datos de ocupación con los datos de abundancia en un modelo integrado, y se ve así:

1. Modelo para el tamaño de la población de cuadrantes (modelo de proceso de estado): 

$$N_i \sim Poisson(\lambda_i)$$

$$log(\lambda_i) = /beta_0 + covariate effect $$


2. Modelo de error de medición (modelo de observación): 

$$y_{ij}|N_i \sim Bernoulli(P^*_{ij})$$

$$P^*_{ij} = 1 - (1 - P_{ij}N_i)$$

$$logit(P_{ij} = \alpha_0 + covariate effect$$



## Cargar base de datos

```{r, warning=FALSE, message=FALSE}

library(tidyverse)
library(unmarked)
library(AICcmodavg)

ArdillaRoja <- readRDS("data/SwissSquirrels.rds")
```

## Formatear base de datos a formato unmarked

Pasar cada replica en columnas diferentes de acuerdo a la especie de ave

```{r}
y <- ArdillaRoja[,c("det071", "det072", "det073")]

SiteCov <- ArdillaRoja[,c("ele", "forest")]

ObsCov <- list(Fecha = ArdillaRoja[,c("date071", "date072", "date073")],
               Dur = ArdillaRoja[,c("dur071", "dur072", "dur073")])
```

## Crear tabla unmarked

```{r}

Ardillas_umf <- unmarkedFrameOccu(y = y, siteCovs = SiteCov, 
                                    obsCovs= ObsCov)

summary(Ardillas_umf)

```

## Ajustar modelo de detección  

```{r, warning=FALSE, message=FALSE}
#### MODELAR DETECCION PRIMERO

ModelDet0 <- occuRN(~1 ~1, Ardillas_umf) ##Null model

ModelDet1 <- occuRN(~Fecha ~1, Ardillas_umf)

ModelDet2 <- occuRN(~Dur ~1, Ardillas_umf)

ModelDet3 <- occuRN(~Fecha + Dur ~1, Ardillas_umf)
```

## Seleccion de modelo de detección 

```{r}
library(AICcmodavg)

DetModels <- list(ModelDet0, ModelDet1, ModelDet2, ModelDet3)

DetNames <- c("Nulo", "Fecha", "Dur", "Fecha +Dur")

aictab(DetModels, DetNames, sort = TRUE)
```

## Ajustar modelo de abundancia 

```{r, warning=FALSE, message=FALSE}
#### MODELAR DETECCION PRIMERO

ModelOccu0 <- occuRN(~Fecha + Dur ~ 1, Ardillas_umf) ##Null model

ModelOccu1 <- occuRN(~Fecha + Dur ~ ele, Ardillas_umf)

ModelOccu2 <- occuRN(~Fecha + Dur ~ forest, Ardillas_umf)

ModelOccu3 <- occuRN(~Fecha + Dur ~ ele + forest, Ardillas_umf)

ModelOccu4 <- occuRN(~Fecha + Dur ~ ele + I(ele^2), Ardillas_umf)

ModelOccu5 <- occuRN(~Fecha + Dur ~ forest + I(forest^2), Ardillas_umf)
```

## Seleccion de modelo de abundancia 

```{r}
library(AICcmodavg)

AbunModels <- list(ModelOccu0, ModelOccu1, ModelOccu2, ModelOccu3, ModelOccu4, ModelOccu5)

AbunNames <- c("Nulo", "ele", "forest", "ele + forest" , "ele2", "forest2")

aictab(AbunModels, AbunNames, sort = TRUE)
```

## Resumen de los resultados

```{r}
summary(ModelOccu2)
confint(ModelOccu2, type = "state", level = 0.95)
```

## Bondad de ajuste

```{r, warning=FALSE, message=FALSE}


fitstats <- function(Mod_global2) {
  observed <- getY(Mod_global2@data)
  expected <- fitted(Mod_global2)
  resids <- residuals(Mod_global2)
  sse <- sum(resids^2,na.rm=TRUE)
  chisq <- sum((observed - expected)^2 / expected,na.rm=TRUE)
  freeTuke <- sum((sqrt(observed) - sqrt(expected))^2,na.rm=TRUE)
  out <- c(SSE=sse, Chisq=chisq, freemanTukey=freeTuke)
  return(out)
}

(pb <- parboot(ModelOccu2, fitstats, nsim=100, report=1))


```

```{r}
cHat_pb <- pb@t0[2] / mean(pb@t.star[,2])
cHat_pb
```


## Prepar data para graficar abundancia 

```{r}
Forest <- data.frame(forest = seq(min(ArdillaRoja$forest, na.rm = TRUE), max(ArdillaRoja$forest, na.rm = TRUE), length.out = 100))
                                 
Forest_pre <- predict(ModelOccu2, newdata =Forest, type = "state", appendData = TRUE)

```

## Graficar modelo de abundancia

```{r}
ggplot(data= Forest_pre, aes(x= forest, y= Predicted))+
  geom_ribbon(aes(ymin= lower,
                  ymax= upper), fill = "lightblue") +
  geom_line(color= "black") +
  labs(x = "Cobertura boscosa", 
       y = expression(paste("Abundancia")))+
  ggtitle("Abundancia de Ardilla Roja") +
  theme_classic()
```

## Prepar data para graficar detección 

```{r}
Dur <- data.frame(Dur = seq(min(ArdillaRoja$dur071, na.rm = TRUE), max(ArdillaRoja$dur073, na.rm = TRUE), length.out = 100),
                  Fecha = mean(ArdillaRoja$date072))
                                 
Dur_pre <- predict(ModelOccu2, newdata =Dur, type = "det", appendData = TRUE)

```

## Graficar modelo de detección

```{r}
ggplot(data= Dur_pre, aes(x= Dur, y= Predicted))+
  geom_ribbon(aes(ymin= lower,
                  ymax= upper), fill = "lightblue") +
  geom_line(color= "black") +
  labs(x = "Duración del transecto", 
       y = expression(paste("Probabilidad de detección")))+
  ggtitle("Detección de Ardilla Roja") +
  theme_classic()
```


## Mapa de Abundancia

```{r}
SuizaBosque <- readRDS("data/SuizaBosque.rds")
```

```{r}
SuizaBosque_pre <- predict(ModelOccu2, type = "state", newdata = SuizaBosque,
                           appendData = TRUE)
```


```{r}
library(raster)

SuizaBosque_raster <- data.frame(x= SuizaBosque_pre$x,
                                 y = SuizaBosque_pre$y,
                                 z = SuizaBosque_pre$Predicted)

SuizaBosque_raster <- rasterFromXYZ(SuizaBosque_raster)

plot(SuizaBosque_raster)
```

```{r}
SuizaBosque_raster_df <- as.data.frame(SuizaBosque_raster, xy = TRUE)

library(ggthemes)

ggplot() +
  geom_raster(data = SuizaBosque_raster_df, aes(x = x, y = y, fill = z)) +
  theme_map() +
  scale_fill_gradient(na.value = "white") +
  labs(fill = "Abundancia")

```



:::

![HN Biology Investigation Academy](HN%20Cursos%20publicidad/HN%20Biology%20Inv%20large.jpg)
