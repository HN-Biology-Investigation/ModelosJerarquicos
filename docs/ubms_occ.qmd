---
title: "Ocupación de especies con modelos Bayesiano en poblaciones cerradas (ubms)"
author: "David Murillo"
format:
  html:
    css: styles.css
---


## Modelado de ocupación y distribución de especies  


::: panel-tabset

## Cargar base de datos

```{r, warning=FALSE, message=FALSE}

library(tidyverse)
library(ubms)

ArdillaRoja <- readRDS("data/SwissSquirrels.rds")
```

## Formatear base de datos a formato unmarked

Pasar cada replica en columnas diferentes de acuerdo a la especie de ave

```{r}
y <- ArdillaRoja[,c("det071", "det072", "det073")]

SiteCov <- ArdillaRoja[,c("ele", "forest")]

ObsCov <- list(Fecha = ArdillaRoja[,c("date071", "date072", "date073")],
               Dur = ArdillaRoja[,c("dur071", "dur072", "dur073")])
```

## Crear tabla unmarked

```{r}

Ardillas_umf <- unmarkedFrameOccu(y = y, siteCovs = SiteCov, 
                                    obsCovs= ObsCov)

summary(Ardillas_umf)

```

## Ajustar modelo de detección  

```{r, warning=FALSE, message=FALSE, results='hide'}

ModelDet0 <-stan_occu(~1 ~1, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30) 

ModelDet1 <- stan_occu(~Fecha ~1, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30)

ModelDet2 <- stan_occu(~Dur ~1, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30)

ModelDet3 <- stan_occu(~Fecha + Dur ~1, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30)
```

## Seleccion de modelo de detección 

```{r}

waic(ModelDet0)
waic(ModelDet1)
waic(ModelDet2)
waic(ModelDet3)
```

## Ajustar modelo de ocupación 

```{r, warning=FALSE, message=FALSE, results='hide'}

ModelOccu0 <- stan_occu(~Dur ~ 1, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30) 

ModelOccu1 <- stan_occu(~Dur ~ ele, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30)

ModelOccu2 <- stan_occu(~Dur ~ forest, Ardillas_umf,
                      chains = 3, iter= 300, warmup = 30)

```

## Seleccion de modelo de ocupación 

```{r}
waic(ModelOccu0)
waic(ModelOccu1)
waic(ModelOccu2)
```

## Resumen de los resultados

```{r}
ModelOccu2
```

## Bondad de ajuste

```{r, warning=FALSE, message=FALSE}
traceplot(ModelOccu2)

```

## Prepar data para graficar ocupación 

```{r}
Forest <- data.frame(forest = seq(min(ArdillaRoja$forest, na.rm = TRUE), max(ArdillaRoja$forest, na.rm = TRUE), length.out = 100))
                                 
Forest_pre <- predict(ModelOccu2, newdata =Forest, submodel = "state")

Forest_pre <- Forest_pre %>% 
  mutate(forest = Forest$forest) %>% 
  rename(lower = `2.5%`,
         upper = `97.5%`)

```

## Graficar modelo de ocupación

```{r}
ggplot(data= Forest_pre, aes(x= forest, y= Predicted))+
  geom_ribbon(aes(ymin= lower,
                  ymax= upper), fill = "lightblue") +
  geom_line(color= "black") +
  labs(x = "Cobertura boscosa", 
       y = expression(paste("Probabilidad de ocupancia (", psi, ")", sep = "")))+
  ggtitle("Ocupancia de Ardilla Roja") +
  theme_classic()
```


## Mapa de distribucion

```{r}
SuizaBosque <- readRDS("data/SuizaBosque.rds")
```

```{r}
SuizaBosque_pre <- predict(ModelOccu2, submodel = "state", newdata = SuizaBosque,
                           appendData = TRUE)

SuizaBosque_pre <- SuizaBosque_pre %>% 
  mutate(x = SuizaBosque$x,
         y = SuizaBosque$y,
         elevation = SuizaBosque$elevation,
         Forest = SuizaBosque$forest)
```


```{r}
library(raster)

SuizaBosque_raster <- data.frame(x= SuizaBosque_pre$x,
                                 y = SuizaBosque_pre$y,
                                 z = SuizaBosque_pre$Predicted)

SuizaBosque_raster <- rasterFromXYZ(SuizaBosque_raster)

plot(SuizaBosque_raster)
```




```{r}
SuizaBosque_raster_df <- as.data.frame(SuizaBosque_raster, xy = TRUE)

library(ggthemes)

ggplot() +
  geom_raster(data = SuizaBosque_raster_df, aes(x = x, y = y, fill = z)) +
  theme_map() +
  scale_fill_viridis_b(na.value = "white") +
  labs(fill = "Ocupación")

```

:::

![HN Biology Investigation Academy](HN Cursos publicidad/HN Biology Inv large.jpg)
