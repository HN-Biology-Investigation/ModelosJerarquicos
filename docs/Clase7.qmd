---
title: "Clase 7: Modelado de interacciones entre especies (ocupación)"
author: "David Murillo"
format:
  html:
    css: styles.css
---


Este capítulo trata sobre el modelado de interacciones entre dos o más especies en términos de patrones observados en la ocurrencia. Las interacciones entre especies son fundamentales para la ecología, ya que pueden ser resultado de mecanismos ecológicos tan importantes como la competencia, la depredación y el mutualismo, denominados colectivamente interacciones bióticas. En sentido estricto, solo los experimentos manipulativos o las observaciones conductuales directas de individuos permiten decidir si una asociación estadística observada puede atribuirse a interacciones bióticas reales, efectos ambientales o ambos mecanismos juntos. Por ejemplo, una correlación espacial negativa en la ocurrencia o abundancia de dos especies puede deberse a una interacción antagónica, como la competencia, el parasitismo o la depredación. Alternativamente, puede ser simplemente el resultado de diferentes preferencias de hábitat de las dos especies, es decir, filtrado de hábitat. O puede ser el resultado de una combinación de ambos mecanismos. Esta es quizás la advertencia principal para la mayoría de las aplicaciones de los modelos de este capítulo: que una correlación no implica necesariamente causalidad.

Cuando decimos "interacciones entre especies" en esta clase, nos referimos a una asociación o no independencia en los parámetros de múltiples especies en un modelo de ocurrencia. Es decir, utilizamos el término "interacción" en un sentido puramente descriptivo, estadístico o correlativo. Cubriremos modelos multiespecie para ocurrencia, que tienen parámetros específicos para dar cuenta de la posible no independencia entre pares de especies. Además, estos modelos nos permitirán, en diferentes grados, probar hipótesis sobre posibles mecanismos biológicos subyacentes a dicha no independencia entre múltiples especies. Algunos de estos modelos tienen un toque claramente mecanicista, pero ni siquiera ellos nos permitirán hacer inferencias sólidas sobre interacciones reales entre individuos de múltiples especies, a menos que tengamos el tipo correcto de datos (observaciones experimentales o de comportamiento). Sin embargo, los modelos de esta clase pueden ser herramientas poderosas para descubrir patrones: pueden señalar algunos pares de especies como candidatos para interacciones bióticas directas. El descubrimiento de fuertes asociaciones positivas o negativas en la abundancia o la ocurrencia (o posiblemente en otro parámetro) puede ser seguido por investigaciones más enfocadas en los posibles fundamentos mecanicistas de tales patrones. Además, si ajustamos estos modelos a los datos recopilados en el contexto de un experimento manipulativo diseñado para aislar algún mecanismo biológico, entonces nos permitirán hacer inferencias sólidas sobre los efectos de estos mecanismos. Y como siempre, si nuestros modelos muestran una asociación positiva o negativa que fue predicha en base a un conocimiento a priori sobre posibles interacciones bióticas entre estas especies, entonces esto proporciona una inferencia más sólida sobre la existencia de estas interacciones. 

Referencia: [Aplied Hierarchical Modeling in Ecology, Volumen 2](https://www.sciencedirect.com/book/9780128237687/applied-hierarchical-modeling-in-ecology-analysis-of-distribution-abundance-and-species-richness-in-r-and-bugs)

Leer [Rota et al. 2016](https://doi.org/10.1111/2041-210X.12587) para mayor detalles de modelos de ocupación con multiples especies.

::: panel-tabset

## Cargar paquetes

```{r, message=FALSE, warning=FALSE}
library(tidyverse)
library(unmarked)
library(AICcmodavg)
```


## Cargar base de datos

Leer [McShea et al. 2015](https://link.springer.com/article/10.1007/s10980-015-0262-9) para mayor detalles de la base de datos.

```{r}
Carnivores <- readRDS("data/CarnivoreData.rds")

str(Carnivores)
```


# Preparar formato unmarked

```{r}
ylist <- list(bobcat = as.matrix(Carnivores[,c("bobcat1", "bobcat2", "bobcat3" )]), 
              coyote = as.matrix(Carnivores[,c("coyote1", "coyote2", "coyote3" )]),
              redfox = as.matrix(Carnivores[,c("redfox1", "redfox2", "redfox3" )]))
```


```{r}
Dist <- scale(Carnivores[,'Dist_5km'])
HDens <- scale(Carnivores[,'HDens_5km'])
Trail <- Carnivores[,'Trail']

head(sitecovs <- data.frame(Dist = Dist, HDens = HDens, Trail = Trail))
```

```{r}
umf <- unmarkedFrameOccuMulti(y = ylist, siteCovs = sitecovs)
```

```{r}
summary(umf)

plot(umf)
```

## Modelo Nulo

```{r}
occ_formulae1 <- c(
    ' ~ 1',' ~ 1',' ~ 1',
    rep(0,3),
    0
)
```


```{r}
# Constant detection by species
det_formulae1 <- rep(' ~ 1', 3)

# Fit model 1
(fm1 <- occuMulti(det_formulae1, occ_formulae1, umf))
```

## Modelo Dist

```{r, message=FALSE, warning=FALSE}
occ_formulae2 <- c(
    rep(' ~ Dist', 3),
    rep(0, 3),
    0
)

det_formulae2 <- rep('~as.factor(Trail)', 3)

(fm2 <- occuMulti(det_formulae2, occ_formulae2, umf,
    control = list(maxit = 500, trace = TRUE, REPORT = 1)))

```

## Modelo Dist-HDens

```{r}
occ_formulae3 <- c(
    rep(' ~ Dist', 3),
    rep('~HDens', 3),
    0
)

det_formulae3 <- rep('~as.factor(Trail)', 3)

(fm3 <- occuMulti(det_formulae3, occ_formulae3, umf,
    control = list(maxit = 500, trace = TRUE, REPORT = 1)))
```

## Seleccion de modelo

```{r}
library(AICcmodavg)

aictab(cand.set =  list(fm1, fm2, fm3),
       modnames = c("fm1", "fm2", "fm3"))
```


## Predicciones 

Predict conditional occupancy and present in a table

```{r}

nd <- data.frame(Dist = 0, HDens = 0)

bob_none <- predict(fm3, type = 'state', species = 'bobcat',
    cond = c('-coyote','-redfox'), newdata = nd, nsims = 1000)

bob_coyote <- predict(fm3,type = 'state',species = 'bobcat',
    cond = c('coyote','-redfox'), newdata = nd, nsims = 1000)

bob_redfox <- predict(fm3,type = 'state',species = 'bobcat',
    cond = c('-coyote','redfox'), newdata = nd, nsims = 1000)

bob_both <- predict(fm3,type = 'state',species = 'bobcat',
    cond = c('coyote','redfox'), newdata = nd, nsims = 1000)
```

```{r}
round(occtab <- rbind('Neither' = bob_none, 'Coyote' = bob_coyote,
  'Red fox' = bob_redfox, 'Both' = bob_both), 3)
```


## Prediccion Marginal

```{r, warning=FALSE, message=FALSE, results='hide'}

Dist_df <- data.frame(Dist = seq(min(sitecovs$Dist), max(sitecovs$Dist), length = 100) , 
                     HDens = mean(sitecovs$HDens), length = 100)

HDens_df <- data.frame(Dist = mean(sitecovs$Dist) , 
                     HDens = seq(min(sitecovs$HDens), max(sitecovs$HDens), length = 100))

coyote <- predict(fm3,type = 'state',species = 'coyote',
    newdata = Dist_df, nsims = 1000 )

redfox <- predict(fm3,type = 'state',species = 'redfox',
    newdata = Dist_df, nsims = 1000)

bobcat <- predict(fm3,type = 'state',species = 'bobcat',
   newdata = Dist_df, nsims = 1000)
```


```{r, message=FALSE, warning=FALSE}
coyote$Especie <- "coyote"
redfox$Especie <- "redfox"
bobcat$Especie <- "bobcat"

coyote$Dist <- Dist_df$Dist
redfox$Dist <- Dist_df$Dist
bobcat$Dist <- Dist_df$Dist

Carnivores_plot <- rbind(coyote, redfox, bobcat)

head(Carnivores_plot)
```

## Grafico ocupación marginal

```{r, message=FALSE, warning=FALSE}
ggplot(data = Carnivores_plot, aes(x= Dist, y= Predicted, color= Especie, fill = Especie))+
  geom_line()+
  geom_ribbon(aes(ymin =  lower, ymax= upper),
              alpha= 0.5) +
  labs(y ="ocupación Marginal",
       x= "Distancia en radio de 5km")+
  theme_classic()
```

## Prediccion condicional

```{r}

bob_redfox <- predict(fm3,type = 'state',species = 'bobcat',
    cond = c('redfox'), newdata = Dist_df, nsims = 1000)

bob_coyote <- predict(fm3,type = 'state',species = 'bobcat',
    cond = c('coyote'), newdata = Dist_df, nsims = 1000)

bob_coyote$Especie <- "coyote"
bob_redfox$Especie <- "redfox"

bob_coyote$Dist <- Dist_df$Dist
bob_redfox$Dist <- Dist_df$Dist


Bob_Condicional <- rbind(bob_coyote, bob_redfox)

head(Bob_Condicional )
```

## Grafico condicional

```{r}
ggplot(data = Bob_Condicional, aes(x= Dist, y= Predicted, color= Especie, fill = Especie))+
  geom_line()+
  geom_ribbon(aes(ymin =  lower, ymax= upper),
              alpha= 0.5) +
  labs(y ="ocupación de Bobcat",
       x= "Distancia en radio de 5km") +
  theme_classic()
```

:::

![HN Biology Investigation Academy](HN Cursos publicidad/HN Biology Inv large.jpg)
