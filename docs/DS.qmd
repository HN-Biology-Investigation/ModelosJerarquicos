---
title: "Modelar abundancia con muestreo de distancia jerárquico Bayesiano (spAbundance)"
author: "David Murillo"
format: html
editor: visual
---

::: panel-tabset

### Cargar paquete

```{r, warning=FALSE, message=FALSE}
library(spAbundance)
library(unmarked)
library(tidyverse)
library(loo)
```

### Cargar base de datos

```{r}
data(issj)
```

### Prepara data en formato unmarked

```{r}

jay_data <- list(
  y = as.matrix(issj[, 1:3]),
  covs = data.frame(elevation = issj$elevation, 
                   forest = issj$forest,
                   chaparral = issj$chaparral),
  dist.breaks = c(0, 100, 200, 300), 
  offset = rep(1, nrow(issj)))
```

### Ajustar modelos

```{r, warning=FALSE, message=FALSE, results='hide'}

inits.list <- list(alpha = 0,
                   beta = 0,
                   kappa = 1)

fm_jay_nulo <- DS(abund.formula = ~ 1,
             det.formula = ~ 1,
             data = jay_data,
             family = "Poisson",
             transect = 'point',
             det.func = 'halfnormal',
             inits = inits.list,
             n.report = 100,
             n.burn = 1000,
             n.thin = 5,
             n.chains = 3,
             n.batch =10, 
             batch.length= 1000)

fm_jay <- DS(abund.formula = ~ chaparral,
             det.formula = ~ 1,
             data = jay_data,
             family = "Poisson",
             transect = 'point',
             det.func = 'halfnormal',
             inits = inits.list,
             n.report = 100,
             n.burn = 1000,
             n.thin = 5,
             n.chains = 3,
             n.batch =10, 
             batch.length= 1000)



```

### Selección de modelo de abundancia


```{r}
waicAbund(fm_jay_nulo) 
waicAbund(fm_jay) 
```

### Validar modelo

```{r}
plot(fm_jay$beta.samples)
plot(fm_jay$alpha.samples)
```

```{r}
ppc.out.sp <- ppcAbund(fm_jay, fit.stat = 'freeman-tukey', group = 1)

summary(ppc.out.sp)
```

```{r}
summary(fm_jay)
```

### Preparara data para gráficar

```{r}
cha.pred <- data.frame(chaparral = seq(min(issj$chaparral, na.rm = TRUE), 
                                       max(issj$chaparral, na.rm = TRUE), 
                                       length.out = 100))

X.0 <- model.matrix(~chaparral, data = cha.pred)
```


```{r}
out.cha <- predict(fm_jay, X.0 = X.0, type = "abundance")

psi.0.quants <- apply(out.cha$mu.0.samples, 2, quantile, c(0.025, 0.5, 0.975))
```


```{r}
psi_df <- as.data.frame(t(psi.0.quants)) %>% 
  tibble::rownames_to_column("chaparral") %>% 
  mutate(chaparral = as.numeric(chaparral)) %>% 
  pivot_longer(cols = -chaparral, names_to = "quantile", values_to = "value") %>% 
  pivot_wider(names_from = quantile, values_from = value)
```

```{r}
ggplot(psi_df, aes(x = chaparral)) +
  geom_ribbon(aes(ymin = `2.5%`, ymax = `97.5%`), 
              fill = "#4E79A7", alpha = 0.3) +
  geom_line(aes(y = `50%`), color = "#2E5C8A", linewidth = 1) +
  labs(
    x = "Chaparral",
    y = "Abundance (ψ)",
    title = "Estimated Abundance",
    subtitle = "Median with 95% credible intervals"
  ) +
  scale_x_continuous(breaks = seq(0, 100, by = 10)) +
  theme_minimal(base_size = 12) +
  theme(
    panel.grid.minor = element_blank(),
    plot.title = element_text(face = "bold", size = 14),
    plot.subtitle = element_text(color = "gray40"),
    axis.title = element_text(face = "bold")
  )
```


:::

![HN Biology Investigation Academy](HN Cursos publicidad/HN Biology Inv large.jpg)
